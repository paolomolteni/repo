<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>it.paolomolteni</groupId>
  <artifactId>angular-integration</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>angular-integration Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>angular-integration</finalName>
    <plugins>
    	<!-- This plugin clean the resources build in a previous step. -->
   		<plugin>
	    	<artifactId>maven-clean-plugin</artifactId>
		    <configuration>
	      		<filesets>
		        	<fileset>
		          		<directory>${basedir}/src/main/webapp</directory>
		          		<includes>
		            		<include>**/*.txt</include>
		            		<include>**/*.ico</include>
		            		<include>**/*.js</include>
		            		<include>**/*.css</include>
		          		</includes>
		        	</fileset>
		      	</filesets>
		    </configuration>
		</plugin>
    	<!-- This plugin execute an external command. In this case the angular app is built. -->
    	<plugin>
	        <groupId>org.codehaus.mojo</groupId>
	        <artifactId>exec-maven-plugin</artifactId>
	        <version>1.5.0</version>
	        <executions>
	        	<execution>
	                <id>exec-npm-build</id>
	                <phase>generate-sources</phase>
	                <configuration>
	                    <workingDirectory>${basedir}/myapp</workingDirectory>
	                    <executable>npm.cmd</executable>
	                    <arguments>
	                    	<argument>run-script</argument>
	                        <argument>build</argument>
	                    </arguments>
	                </configuration>
	                <goals>
	                    <goal>exec</goal>
	                </goals>
	            </execution>
	        </executions>
	    </plugin>
	    <!-- This plugin copy the angular app into the webapp folder -->
     	<plugin>
   			<artifactId>maven-resources-plugin</artifactId>
	        <executions>
          		<execution>
	            	<id>copy-resources</id>
		            <!-- here the phase you need -->
		            <phase>validate</phase>
		            <goals>
		              <goal>copy-resources</goal>
		            </goals>
		            <configuration>
	              		<outputDirectory>${basedir}/src/main/webapp</outputDirectory>
		              	<resources>          
		                	<resource>
		                  		<directory>${basedir}/myapp/dist/myapp</directory>
		                  		<filtering>true</filtering>
		                	</resource>
		              	</resources>              
	            	</configuration>            
          		</execution>
	        </executions>
      	</plugin>
    </plugins>
    
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
        	<groupId>org.eclipse.m2e</groupId>
        	<artifactId>lifecycle-mapping</artifactId>
        	<version>1.0.0</version>
        	<configuration>
        		<lifecycleMappingMetadata>
        			<pluginExecutions>
        				<pluginExecution>
        					<pluginExecutionFilter>
        						<groupId>org.codehaus.mojo</groupId>
        						<artifactId>
        							exec-maven-plugin
        						</artifactId>
        						<versionRange>[1.5.0,)</versionRange>
        						<goals>
        							<goal>exec</goal>
        						</goals>
        					</pluginExecutionFilter>
        					<action>
        						<ignore></ignore>
        					</action>
        				</pluginExecution>
        			</pluginExecutions>
        		</lifecycleMappingMetadata>
        	</configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
